{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jai Bisht\\\\OneDrive\\\\Desktop\\\\babel\\\\Parcel\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./component/Navbar\";\nimport About from \"./component/About\";\nimport TextForm from \"./component/TextForm\";\nimport React, { useState } from 'react';\nimport Alert from \"./component/Alert\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showAlert = (messege, type) => {\n    setAlert({\n      type: type,\n      msg: messege\n    });\n  };\n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n  const [mode, setMode] = useState('dark'); // whether dark mode is enabled or not\n  if (mode === 'dark') {\n    document.body.style.backgroundColor = \"#0e3243\";\n    document.body.style.color = 'white';\n  } else {\n    document.body.style.backgroundColor = 'white';\n    document.body.style.color = 'black';\n  }\n  const toggleMode = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", 'success');\n    } else {\n      setMode('dark');\n      document.body.style.backgroundColor = '#0e3243';\n      showAlert(\"dark mode has been enabled\", 'success');\n    }\n  };\n  const greenMode = () => {\n    document.body.style.backgroundColor = \"rgb(50 120 33)\";\n    document.getElementsByClassName(\"btn btn-primary\").backgroundColor = \"green\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtil2\",\n        mode: mode,\n        toggleMode: toggleMode,\n        greenMode: greenMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Enter the text to analyze\",\n              mode: mode,\n              greenMode: greenMode,\n              toggleMode: toggleMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"PMg4bTvq2ZJt7ghi/bUEj4lRIrE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","About","TextForm","React","useState","Alert","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","alert","setAlert","showAlert","messege","type","msg","setTimeout","mode","setMode","document","body","style","backgroundColor","color","toggleMode","greenMode","getElementsByClassName","children","Router","title","fileName","_jsxFileName","lineNumber","columnNumber","className","Switch","path","heading","_c","$RefreshReg$"],"sources":["C:/Users/Jai Bisht/OneDrive/Desktop/babel/Parcel/my-app/src/App.js"],"sourcesContent":["\nimport Navbar from \"./component/Navbar\";\nimport About from \"./component/About\";\nimport TextForm from \"./component/TextForm\";\nimport React, {useState} from 'react';\nimport Alert  from \"./component/Alert\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  \n  \n  const [alert, setAlert]=useState(null);\n  \n  const showAlert=(messege,type)=>{\n    setAlert({\n      type:type,\n      msg:messege\n    })\n  }\n  setTimeout(()=>{\n    setAlert(null);\n  },1500);\n\n  const [mode,setMode]=useState('dark');// whether dark mode is enabled or not\n  if(mode ==='dark'){\n    document.body.style.backgroundColor=\"#0e3243\";\n    document.body.style.color='white';\n    }else\n    {\n    document.body.style.backgroundColor='white';\n    document.body.style.color='black';\n  }\n  \n  const toggleMode=()=>{\n    if(mode ==='dark'){\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode has been enabled\",'success');\n      }else\n      {\n      setMode('dark');\n      document.body.style.backgroundColor='#0e3243';\n      showAlert(\"dark mode has been enabled\",'success');\n    }\n  }\n  const greenMode=()=>{\n    document.body.style.backgroundColor=\"rgb(50 120 33)\";\n    document.getElementsByClassName(\"btn btn-primary\").backgroundColor=\"green\";\n  }\n  return (\n  <> \n  <Router>\n  <Navbar title=\"TextUtil2\" mode={mode} toggleMode={toggleMode} greenMode={greenMode} />\n  <Alert alert={alert}/>\n  <div className=\"container my-3\" >\n    <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} greenMode={greenMode} toggleMode={toggleMode}/>\n        \n          </Route>\n        </Switch>\n  </div>\n  </Router>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}