{"ast":null,"code":"import Navbar from\"./component/Navbar\";//import About from \"./component/About\";\nimport TextForm from\"./component/TextForm\";import React,{useState}from'react';import Alert from\"./component/Alert\";// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n// } from \"react-router-dom\";\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[alert,setAlert]=useState(null);const showAlert=(messege,type)=>{setAlert({type:type,msg:messege});};setTimeout(()=>{setAlert(null);},1500);const[mode,setMode]=useState('dark');// whether dark mode is enabled or not\nif(mode==='dark'){document.body.style.backgroundColor=\"#0e3243\";document.body.style.color='white';}else{document.body.style.backgroundColor='white';document.body.style.color='black';}const toggleMode=()=>{if(mode==='dark'){setMode('light');document.body.style.backgroundColor=\"white\";showAlert(\"light mode has been enabled\",'success');}else{setMode('dark');document.body.style.backgroundColor='#0e3243';showAlert(\"dark mode has been enabled\",'success');}};const greenMode=()=>{document.body.style.backgroundColor=\"rgb(50 120 33)\";document.getElementsByClassName(\"btn btn-primary\").backgroundColor=\"green\";};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtil2\",mode:mode,toggleMode:toggleMode,greenMode:greenMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter the text to analyze\",mode:mode,greenMode:greenMode,toggleMode:toggleMode})})]});}export default App;","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","alert","setAlert","showAlert","messege","type","msg","setTimeout","mode","setMode","document","body","style","backgroundColor","color","toggleMode","greenMode","getElementsByClassName","children","title","className","heading"],"sources":["C:/Users/Jai Bisht/OneDrive/Desktop/ReactJS/my-app/src/App.js"],"sourcesContent":["\nimport Navbar from \"./component/Navbar\";\n//import About from \"./component/About\";\nimport TextForm from \"./component/TextForm\";\nimport React, {useState} from 'react';\nimport Alert  from \"./component/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n// } from \"react-router-dom\";\n\nfunction App() {\n  \n  \n  const [alert, setAlert]=useState(null);\n  \n  const showAlert=(messege,type)=>{\n    setAlert({\n      type:type,\n      msg:messege\n    })\n  }\n  setTimeout(()=>{\n    setAlert(null);\n  },1500);\n\n  const [mode,setMode]=useState('dark');// whether dark mode is enabled or not\n  if(mode ==='dark'){\n    document.body.style.backgroundColor=\"#0e3243\";\n    document.body.style.color='white';\n    }else\n    {\n    document.body.style.backgroundColor='white';\n    document.body.style.color='black';\n  }\n  \n  const toggleMode=()=>{\n    if(mode ==='dark'){\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode has been enabled\",'success');\n      }else\n      {\n      setMode('dark');\n      document.body.style.backgroundColor='#0e3243';\n      showAlert(\"dark mode has been enabled\",'success');\n    }\n  }\n  const greenMode=()=>{\n    document.body.style.backgroundColor=\"rgb(50 120 33)\";\n    document.getElementsByClassName(\"btn btn-primary\").backgroundColor=\"green\";\n  }\n  return (\n  <> \n  {/* <Router> */}\n  <Navbar title=\"TextUtil2\" mode={mode} toggleMode={toggleMode} greenMode={greenMode} />\n  <Alert alert={alert}/>\n  <div className=\"container my-3\" >\n  {/* <Routes>\n          <Route path=\"/about\" element={<About />}>\n          </Route>\n          <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} greenMode={greenMode} toggleMode={toggleMode} />}>\n          </Route>\n  </Routes> */}\n  \n  {/* <About/> */}\n  <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} greenMode={greenMode} toggleMode={toggleMode} />\n  </div>\n  {/* </Router> */}\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"AACA,MAAO,CAAAA,MAAM,KAAM,oBAAoB,CACvC;AACA,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,MAAO,CAAAC,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,MAAO,CAAAC,KAAK,KAAO,mBAAmB,CACtC;AACA;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAGb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAACV,QAAQ,CAAC,IAAI,CAAC,CAEtC,KAAM,CAAAW,SAAS,CAACA,CAACC,OAAO,CAACC,IAAI,GAAG,CAC9BH,QAAQ,CAAC,CACPG,IAAI,CAACA,IAAI,CACTC,GAAG,CAACF,OACN,CAAC,CAAC,CACJ,CAAC,CACDG,UAAU,CAAC,IAAI,CACbL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAC,IAAI,CAAC,CAEP,KAAM,CAACM,IAAI,CAACC,OAAO,CAAC,CAACjB,QAAQ,CAAC,MAAM,CAAC,CAAC;AACtC,GAAGgB,IAAI,GAAI,MAAM,CAAC,CAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,SAAS,CAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAC,OAAO,CACjC,CAAC,IACD,CACAJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,OAAO,CAC3CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAC,OAAO,CACnC,CAEA,KAAM,CAAAC,UAAU,CAACA,CAAA,GAAI,CACnB,GAAGP,IAAI,GAAI,MAAM,CAAC,CAChBC,OAAO,CAAC,OAAO,CAAC,CAChBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,OAAO,CAC3CV,SAAS,CAAC,6BAA6B,CAAC,SAAS,CAAC,CAClD,CAAC,IACD,CACAM,OAAO,CAAC,MAAM,CAAC,CACfC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,SAAS,CAC7CV,SAAS,CAAC,4BAA4B,CAAC,SAAS,CAAC,CACnD,CACF,CAAC,CACD,KAAM,CAAAa,SAAS,CAACA,CAAA,GAAI,CAClBN,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,gBAAgB,CACpDH,QAAQ,CAACO,sBAAsB,CAAC,iBAAiB,CAAC,CAACJ,eAAe,CAAC,OAAO,CAC5E,CAAC,CACD,mBACAd,KAAA,CAAAF,SAAA,EAAAqB,QAAA,eAEAvB,IAAA,CAACN,MAAM,EAAC8B,KAAK,CAAC,WAAW,CAACX,IAAI,CAAEA,IAAK,CAACO,UAAU,CAAEA,UAAW,CAACC,SAAS,CAAEA,SAAU,CAAE,CAAC,cACtFrB,IAAA,CAACF,KAAK,EAACQ,KAAK,CAAEA,KAAM,CAAC,CAAC,cACtBN,IAAA,QAAKyB,SAAS,CAAC,gBAAgB,CAAAF,QAAA,cAS/BvB,IAAA,CAACL,QAAQ,EAACa,SAAS,CAAEA,SAAU,CAACkB,OAAO,CAAC,2BAA2B,CAACb,IAAI,CAAEA,IAAK,CAACQ,SAAS,CAAEA,SAAU,CAACD,UAAU,CAAEA,UAAW,CAAE,CAAC,CAC3H,CAAC,EAEJ,CAAC,CAEL,CAEA,cAAe,CAAAf,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}