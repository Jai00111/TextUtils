{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jai Bisht\\\\OneDrive\\\\Desktop\\\\babel\\\\Parcel\\\\my-app\\\\src\\\\component\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleClick = () => {\n    console.log(\"Upercase was clicked\" + text);\n    let newText = text.toUpperCase;\n    console.log(newText);\n  };\n  const handleonChange = event => {\n    console.log(\"handleonChange was clicked\");\n    setText(event.target.text);\n  };\n  const [text, setText] = useState('enter text here');\n  //text=\"hloo this is jai here\"              worng way to change the text.\n  // setText=\"enter text here again\"          this is the right way to change the text.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"myBox\",\n        className: \"form-label\",\n        children: props.TextArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleonChange,\n        id: \"myBox\",\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleClick,\n      children: \"Convert into Upercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(TextForm, \"g/sAwTOqEeaKFmTu9AnQbDJpIjE=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextForm","props","_s","handleClick","console","log","text","newText","toUpperCase","handleonChange","event","setText","target","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","TextArea","value","onChange","id","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jai Bisht/OneDrive/Desktop/babel/Parcel/my-app/src/component/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleClick=()=>{\r\n        console.log(\"Upercase was clicked\" + text);\r\n        let newText=text.toUpperCase;\r\n        console.log(newText);   \r\n    }\r\n\r\n    const handleonChange=(event)=>{\r\n        console.log(\"handleonChange was clicked\");\r\n        setText(event.target.text);\r\n    }\r\n    const [text, setText]=useState('enter text here');\r\n    //text=\"hloo this is jai here\"              worng way to change the text.\r\n    // setText=\"enter text here again\"          this is the right way to change the text.\r\n    return (\r\n        <div>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <label htmlFor=\"myBox\" className=\"form-label\">{props.TextArea}</label>\r\n            <textarea className=\"form-control\" value={text} onChange={handleonChange} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className='btn btn-primary' onClick={handleClick}>Convert into Upercase</button>\r\n        </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAMC,WAAW,GAACA,CAAA,KAAI;IAClBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGC,IAAI,CAAC;IAC1C,IAAIC,OAAO,GAACD,IAAI,CAACE,WAAW;IAC5BJ,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;EACxB,CAAC;EAED,MAAME,cAAc,GAAEC,KAAK,IAAG;IAC1BN,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCM,OAAO,CAACD,KAAK,CAACE,MAAM,CAACN,IAAI,CAAC;EAC9B,CAAC;EACD,MAAM,CAACA,IAAI,EAAEK,OAAO,CAAC,GAACd,QAAQ,CAAC,iBAAiB,CAAC;EACjD;EACA;EACA,oBACIE,OAAA;IAAAc,QAAA,gBACAd,OAAA;MAAAc,QAAA,EAAKZ,KAAK,CAACa;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBnB,OAAA;MAAKoB,SAAS,EAAC,MAAM;MAAAN,QAAA,gBACjBd,OAAA;QAAOqB,OAAO,EAAC,OAAO;QAACD,SAAS,EAAC,YAAY;QAAAN,QAAA,EAAEZ,KAAK,CAACoB;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtEnB,OAAA;QAAUoB,SAAS,EAAC,cAAc;QAACG,KAAK,EAAEhB,IAAK;QAACiB,QAAQ,EAAEd,cAAe;QAACe,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC;MAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxG,CAAC,eACNnB,OAAA;MAAQoB,SAAS,EAAC,iBAAiB;MAACO,OAAO,EAAEvB,WAAY;MAAAU,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEd;AAAChB,EAAA,CAxBuBF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}