{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jai Bisht\\\\OneDrive\\\\Desktop\\\\babel\\\\Parcel\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./component/Navbar\";\n// import About from \"./component/About\";\nimport TextForm from \"./component/TextForm\";\nimport React, { useState } from 'react';\nimport Alert from \"./component/Alert\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showAlert = (messege, type) => {\n    setAlert({\n      type: type,\n      msg: messege\n    });\n  };\n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n  const [mode, setMode] = useState('dark'); // whether dark mode is enabled or not\n  if (mode === 'dark') {\n    document.body.style.backgroundColor = \"#0e3243\";\n    document.body.style.color = 'white';\n  } else {\n    document.body.style.backgroundColor = 'white';\n    document.body.style.color = 'black';\n  }\n  const toggleMode = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", 'success');\n    } else {\n      setMode('dark');\n      document.body.style.backgroundColor = '#0e3243';\n      showAlert(\"dark mode has been enabled\", 'success');\n    }\n  };\n  const [mode2, setMode2] = useState({\n    mode\n  }); // whether dark mode is enabled or not\n  const greenMode = () => {\n    if (mode === 'dark') {\n      setMode2('green');\n      document.body.style.backgroundColor = \"rgb(39 64 46)\";\n      showAlert(\"green mode has been enabled\", 'success');\n    } else {\n      setMode2('yellow');\n      document.body.style.backgroundColor = 'rgb(135 147 69)';\n      showAlert(\"yellow mode has been enabled\", 'success');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtil2\",\n      mode: mode,\n      mode2: mode2,\n      toggleMode: toggleMode,\n      greenMode: greenMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the text to analyze\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"BkwN3BOQ+5sGNGCkAedsL8IKMfQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","alert","setAlert","showAlert","messege","type","msg","setTimeout","mode","setMode","document","body","style","backgroundColor","color","toggleMode","mode2","setMode2","greenMode","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/Jai Bisht/OneDrive/Desktop/babel/Parcel/my-app/src/App.js"],"sourcesContent":["\nimport Navbar from \"./component/Navbar\";\n// import About from \"./component/About\";\nimport TextForm from \"./component/TextForm\";\nimport React, {useState} from 'react';\nimport Alert  from \"./component/Alert\";\n\nfunction App() {\n  \n  \n  const [alert, setAlert]=useState(null);\n  \n  const showAlert=(messege,type)=>{\n    setAlert({\n      type:type,\n      msg:messege\n    })\n  }\n  setTimeout(()=>{\n    setAlert(null);\n  },1500);\n\n  const [mode,setMode]=useState('dark');// whether dark mode is enabled or not\n  if(mode ==='dark'){\n    document.body.style.backgroundColor=\"#0e3243\";\n    document.body.style.color='white';\n    }else\n    {\n    document.body.style.backgroundColor='white';\n    document.body.style.color='black';\n  }\n  \n  const toggleMode=()=>{\n    if(mode ==='dark'){\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode has been enabled\",'success');\n      }else\n      {\n      setMode('dark');\n      document.body.style.backgroundColor='#0e3243';\n      showAlert(\"dark mode has been enabled\",'success');\n    }\n  }\n\n  const [mode2,setMode2]=useState({mode});// whether dark mode is enabled or not\n  const greenMode=()=>{\n    if(mode ==='dark'){\n      setMode2('green');\n      document.body.style.backgroundColor=\"rgb(39 64 46)\";\n      showAlert(\"green mode has been enabled\",'success');\n      }else\n      {\n      setMode2('yellow');\n      document.body.style.backgroundColor='rgb(135 147 69)';\n      showAlert(\"yellow mode has been enabled\",'success');\n    }\n  }\n  return (\n  <> \n  <Navbar title=\"TextUtil2\" mode={mode} mode2={mode2} toggleMode={toggleMode} greenMode={greenMode}/>\n  <Alert alert={alert}/>\n  <div className=\"container my-3\" >\n  <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} toggleMode={toggleMode} />\n  </div>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}